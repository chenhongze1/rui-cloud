version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: rui-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: rui_demo
      MYSQL_USER: rui
      MYSQL_PASSWORD: rui123
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/conf:/etc/mysql/conf.d
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - rui-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: rui-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - rui-network

  # Jaeger链路追踪（可选）
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: rui-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
      - "6831:6831/udp"  # UDP agent
      - "6832:6832/udp"  # UDP agent
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLECTOR_ZIPKIN_HOST_PORT: ":9411"
    networks:
      - rui-network
    profiles:
      - monitoring

  # Zipkin链路追踪（可选）
  zipkin:
    image: openzipkin/zipkin:latest
    container_name: rui-zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    environment:
      STORAGE_TYPE: mem
    networks:
      - rui-network
    profiles:
      - monitoring

  # Prometheus监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: rui-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rui-network
    profiles:
      - monitoring

  # Grafana可视化（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: rui-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - rui-network
    profiles:
      - monitoring

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: rui-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - mysql
      - redis
    networks:
      - rui-network
    profiles:
      - proxy

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rui-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16